plugins {
    id 'groovy'
    id 'java-library'
    id "maven-publish"
    id "signing"
    id 'io.github.gradle-nexus.publish-plugin' version '1.1.0'
}


ext.isReleaseVersion = !project.version.endsWith("-SNAPSHOT")

repositories {
    mavenCentral()
}

java {
    withJavadocJar()
    withSourcesJar()
}

publishing {
    publications {
        mavenJava(MavenPublication) {
            pom {
                description = project.description
                url = 'https://github.com/doctoolchain/asciidoctorj-jira-extension'
                from components.java
                developers {
                    developer {
                        id = 'uniqueck'
                        name = 'Constantin Kr√ºger'
                        email = 'github@constantin-krueger.com'
                    }
                }
            }
        }
    }
}

signing {
    sign publishing.publications.mavenJava
}

tasks.withType(Sign) {
    onlyIf { isReleaseVersion }
}


nexusPublishing {
    repositories {
        sonatype {
            nexusUrl.set(uri("https://s01.oss.sonatype.org/service/local/"))
            snapshotRepositoryUrl.set(uri("https://s01.oss.sonatype.org/content/repositories/snapshots/"))
            username = findProperty("nexusUsername") ?: System.getenv("OSSRH_USERNAME")
            password = findProperty("nexusPassword") ?: System.getenv("OSSRH_PASSWORD")
        }
    }
}



dependencies {
    implementation 'org.codehaus.groovy:groovy-all:3.0.8'
    testImplementation platform("org.spockframework:spock-bom:2.0-groovy-3.0")
    testImplementation 'org.spockframework:spock-core:2.0-groovy-3.0'
    implementation 'com.github.groovy-wslite:groovy-wslite:1.1.3'
    implementation 'org.asciidoctor:asciidoctorj:2.2.0'
    testImplementation 'org.junit.jupiter:junit-jupiter-api:5.7.2'
    testRuntimeOnly 'org.junit.jupiter:junit-jupiter-engine:5.7.2'
    testImplementation 'com.github.tomakehurst:wiremock-jre8:2.30.0'
}

test {
    useJUnitPlatform()
    testLogging {
        events "passed", "skipped", "failed"
    }
}